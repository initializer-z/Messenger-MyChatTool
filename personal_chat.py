# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'personal_chat.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import threading
import time
import os


class MyQLabel(QtWidgets.QLabel):
    # 构建可以点击的Label类型
    button_clicked_signal = QtCore.pyqtSignal()

    def __init__(self, parent=None):
        super(MyQLabel, self).__init__(parent)

    def mouseReleaseEvent(self, QMouseEvent):
        self.button_clicked_signal.emit()

    # 可在外部与槽函数连接
    def connect_customized_slot(self, func):
        self.button_clicked_signal.connect(func)


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(525, 556)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(Dialog.sizePolicy().hasHeightForWidth())
        Dialog.setSizePolicy(sizePolicy)
        Dialog.setMinimumSize(QtCore.QSize(525, 556))
        Dialog.setMaximumSize(QtCore.QSize(525, 556))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("imgs/icon.png"),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Dialog.setWindowIcon(icon)
        Dialog.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.frame = QtWidgets.QFrame(Dialog)
        self.frame.setGeometry(QtCore.QRect(0, 0, 531, 41))
        self.frame.setStyleSheet("background-color: rgb(38, 99, 184);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(120, 10, 281, 20))
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(255, 255, 255);")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.textEdit = QtWidgets.QTextEdit(Dialog)
        self.textEdit.setGeometry(QtCore.QRect(10, 390, 361, 91))
        self.textEdit.setObjectName("textEdit")
        self.textBrowser = QtWidgets.QTextBrowser(Dialog)
        self.textBrowser.setGeometry(QtCore.QRect(10, 60, 361, 301))
        self.textBrowser.setObjectName("textBrowser")
        self.frame_2 = QtWidgets.QFrame(Dialog)
        self.frame_2.setGeometry(QtCore.QRect(380, 40, 151, 521))
        self.frame_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.label_2 = QtWidgets.QLabel(self.frame_2)
        self.label_2.setGeometry(QtCore.QRect(10, 50, 121, 141))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("imgs/avatar_icon.png"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.frame_2)
        self.label_3.setGeometry(QtCore.QRect(10, 290, 121, 141))
        self.label_3.setText("")
        self.label_3.setPixmap(QtGui.QPixmap("imgs/avatar_icon.png"))
        self.label_3.setScaledContents(True)
        self.label_3.setObjectName("label_3")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(30, 500, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setStyleSheet("background-color: rgb(38, 99, 184);\n"
                                      "color: rgb(255, 255, 255);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(250, 500, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_2.setStyleSheet("background-color: rgb(38, 99, 184);\n"
                                        "color: rgb(255, 255, 255);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_4 = MyQLabel(Dialog)
        self.label_4.setGeometry(QtCore.QRect(10, 365, 31, 21))
        self.label_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label_4.setText("")
        self.label_4.setPixmap(QtGui.QPixmap("imgs/emojibutton.png"))
        self.label_4.setObjectName("label_4")
        self.label_5 = MyQLabel(Dialog)
        self.label_5.setGeometry(QtCore.QRect(40, 365, 31, 21))
        self.label_5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label_5.setText("")
        self.label_5.setPixmap(QtGui.QPixmap("imgs/filebutton.png"))
        self.label_5.setScaledContents(False)
        self.label_5.setObjectName("label_5")
        self.label_6 = MyQLabel(Dialog)
        self.label_6.setGeometry(QtCore.QRect(70, 365, 31, 20))
        self.label_6.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.label_6.setText("")
        self.label_6.setPixmap(QtGui.QPixmap("imgs/imagebutton.png"))
        self.label_6.setObjectName("label_6")
        self.frame_3 = QtWidgets.QFrame(Dialog)
        self.frame_3.setGeometry(QtCore.QRect(20, 260, 211, 91))
        self.frame_3.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.frame_3.hide()
        self.pushButton_3 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_3.setGeometry(QtCore.QRect(10, 10, 31, 31))
        self.pushButton_3.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_3.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton_3.setStyleSheet("border:none;")
        self.pushButton_3.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("emoji/0.gif"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_3.setIcon(icon1)
        self.pushButton_3.setIconSize(QtCore.QSize(32, 32))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_4.setGeometry(QtCore.QRect(50, 10, 31, 31))
        self.pushButton_4.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_4.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton_4.setStyleSheet("border:none;")
        self.pushButton_4.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("emoji/1.gif"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_4.setIcon(icon2)
        self.pushButton_4.setIconSize(QtCore.QSize(32, 32))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_5.setGeometry(QtCore.QRect(90, 10, 31, 31))
        self.pushButton_5.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_5.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton_5.setStyleSheet("border:none;")
        self.pushButton_5.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("emoji/2.gif"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_5.setIcon(icon3)
        self.pushButton_5.setIconSize(QtCore.QSize(32, 32))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_6.setGeometry(QtCore.QRect(130, 10, 31, 31))
        self.pushButton_6.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_6.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton_6.setStyleSheet("border:none;")
        self.pushButton_6.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("emoji/3.gif"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_6.setIcon(icon4)
        self.pushButton_6.setIconSize(QtCore.QSize(32, 32))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_7.setGeometry(QtCore.QRect(170, 10, 31, 31))
        self.pushButton_7.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_7.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton_7.setStyleSheet("border:none;")
        self.pushButton_7.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("emoji/4.gif"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_7.setIcon(icon5)
        self.pushButton_7.setIconSize(QtCore.QSize(32, 32))
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_8 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_8.setGeometry(QtCore.QRect(10, 50, 31, 31))
        self.pushButton_8.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_8.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton_8.setStyleSheet("border:none;")
        self.pushButton_8.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("emoji/5.gif"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_8.setIcon(icon6)
        self.pushButton_8.setIconSize(QtCore.QSize(32, 32))
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_9 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_9.setGeometry(QtCore.QRect(50, 50, 31, 31))
        self.pushButton_9.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_9.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton_9.setStyleSheet("border:none;")
        self.pushButton_9.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("emoji/6.gif"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_9.setIcon(icon7)
        self.pushButton_9.setIconSize(QtCore.QSize(32, 32))
        self.pushButton_9.setObjectName("pushButton_9")
        self.pushButton_10 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_10.setGeometry(QtCore.QRect(90, 50, 31, 31))
        self.pushButton_10.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_10.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton_10.setStyleSheet("border:none;")
        self.pushButton_10.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("emoji/7.gif"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_10.setIcon(icon8)
        self.pushButton_10.setIconSize(QtCore.QSize(32, 32))
        self.pushButton_10.setObjectName("pushButton_10")
        self.pushButton_11 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_11.setGeometry(QtCore.QRect(130, 50, 31, 31))
        self.pushButton_11.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_11.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton_11.setStyleSheet("border:none;")
        self.pushButton_11.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("emoji/8.gif"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_11.setIcon(icon9)
        self.pushButton_11.setIconSize(QtCore.QSize(32, 32))
        self.pushButton_11.setObjectName("pushButton_11")
        self.pushButton_12 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_12.setGeometry(QtCore.QRect(170, 50, 31, 31))
        self.pushButton_12.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_12.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.pushButton_12.setStyleSheet("border:none;")
        self.pushButton_12.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("emoji/9.gif"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_12.setIcon(icon10)
        self.pushButton_12.setIconSize(QtCore.QSize(32, 32))
        self.pushButton_12.setObjectName("pushButton_12")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.cnt = 0

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Chat"))
        self.label.setText(_translate("Dialog", "perl"))
        self.pushButton.setText(_translate("Dialog", "Shut Down"))
        self.pushButton_2.setText(_translate("Dialog", "Send"))

    def pel_send(self, s, sendname, recvname):
        def send():
            send_list = ['personal']
            send_list.append(sendname)
            send_list.append(recvname)
            sendtext = self.textEdit.toPlainText()
            if sendtext != ' ':
                send_list.append(sendtext)
                textsend = ' '.join(send_list)
                s.send(textsend.encode())
                self.textBrowser.append(
                    "<font color=\"#088A29\">" + time.ctime() + "</font> ")
                self.textBrowser.append(sendname + ':' + sendtext + "\n")
            self.textEdit.clear()

        self.pushButton_2.clicked.connect(send)

    def pel_recv(self, s):
        buffsize = 1024

        def recv():
            while True:
                recvinfo = s.recv(buffsize).decode('utf-8')
                if recvinfo[0:4] != 'file':
                    self.textBrowser.append(
                        "<font color=\"#088A29\">" + time.ctime() + "</font> ")
                    self.textBrowser.append(recvinfo + "\n")
                    print(recvinfo)
                else:
                    recvinfo = recvinfo.split(' ')
                    file_name = recvinfo[1].split('/')[-1]
                    length = int(recvinfo[2])
                    filePath = "received_files/" + file_name
                    f = open(filePath, "wb")
                    received_size = 0
                    while received_size < length:
                        size = 0
                        if length - received_size > 1024:  # 每次只接收 1024
                            size = 1024
                        else:  # 最后一次接收
                            size = length - received_size

                        data = s.recv(size)
                        data_len = len(data)
                        received_size += data_len
                        f.write(data)
                    f.close()
                    self.textBrowser.append(
                        "<font color=\"#088A29\">" + time.ctime() + "</font> ")
                    suffix = file_name[-3:]
                    if suffix == 'png' or suffix == 'jpg' or suffix == 'gif':
                        self.textBrowser.append(
                            '<img src="' + filePath + '"/>')
                    else:
                        self.textBrowser.append(
                            "The file has been saved in this directory： " + filePath + "\n")
                    print(
                        "The file has been saved in this directory： " + filePath + "\n")

        re = threading.Thread(target=recv)  # 创建线程
        re.start()

    def file_send(self, s, sendname, recvname):
        def send_f():
            dialog = QtWidgets.QFileDialog()
            dialog.setFileMode(QtWidgets.QFileDialog.AnyFile)  # 可选任意文件
            dialog.setFilter(QtCore.QDir.Files)
            if dialog.exec_():  # 该方法用于选择文件，如果选中文件则返回true
                filenames = dialog.selectedFiles()  # 获取选中文件名列表
                print(filenames)
                length = os.stat(filenames[0]).st_size
                f = open(filenames[0], 'rb')

                send_list = ['personal_file']
                send_list.append(sendname)
                send_list.append(recvname)
                send_list.append(filenames[0])
                send_list.append(str(length))
                print(send_list)
                textsend = ' '.join(send_list)
                s.send(textsend.encode())

                has_sent = 0
                while has_sent != length:
                    data = f.read(1024)
                    s.send(data)
                    has_sent += len(data)

                self.textBrowser.append(
                    "<font color=\"#088A29\">" + time.ctime() + "</font> ")
                suffix = filenames[0][-3:]
                if suffix == 'png' or suffix == 'jpg' or suffix == 'gif':
                    self.textBrowser.append(
                        '<img src="' + filenames[0] + '"/>')
                else:
                    self.textBrowser.append("The file has been transferred.\n")

                f.close()
            else:
                pass

        self.label_5.connect_customized_slot(send_f)
        self.label_6.connect_customized_slot(send_f)

    def emoji_send(self, s, sendname, recvname):
        def base(file):
            f = open(file, 'rb')
            length = os.stat(file).st_size
            send_list = ['personal_file']
            send_list.append(sendname)
            send_list.append(recvname)
            send_list.append(file)
            send_list.append(str(length))
            print(send_list)
            textsend = ' '.join(send_list)
            s.send(textsend.encode())
            has_sent = 0
            while has_sent != length:
                data = f.read(1024)
                s.send(data)
                has_sent += len(data)
            self.textBrowser.append(
                "<font color=\"#088A29\">" + time.ctime() + "</font> ")
            self.textBrowser.append('<img src="' + file + '"/>')

            f.close()

        def send_e0():
            file = 'emoji/0.gif'
            base(file)

        def send_e1():
            file = 'emoji/1.gif'
            base(file)

        def send_e2():
            file = 'emoji/2.gif'
            base(file)

        def send_e3():
            file = 'emoji/3.gif'
            base(file)

        def send_e4():
            file = 'emoji/4.gif'
            base(file)

        def send_e5():
            file = 'emoji/5.gif'
            base(file)

        def send_e6():
            file = 'emoji/6.gif'
            base(file)

        def send_e7():
            file = 'emoji/7.gif'
            base(file)

        def send_e8():
            file = 'emoji/8.gif'
            base(file)

        def send_e9():
            file = 'emoji/9.gif'
            base(file)

        def show():
            self.cnt += 1
            if self.cnt % 2 == 1:
                self.frame_3.show()
            elif self.cnt % 2 == 0:
                self.frame_3.hide()

        self.label_4.connect_customized_slot(show)

        self.pushButton_3.clicked.connect(send_e0)
        self.pushButton_4.clicked.connect(send_e1)
        self.pushButton_5.clicked.connect(send_e2)
        self.pushButton_6.clicked.connect(send_e3)
        self.pushButton_7.clicked.connect(send_e4)
        self.pushButton_8.clicked.connect(send_e5)
        self.pushButton_9.clicked.connect(send_e6)
        self.pushButton_10.clicked.connect(send_e7)
        self.pushButton_11.clicked.connect(send_e8)
        self.pushButton_12.clicked.connect(send_e9)

    def quit(self, Dlog):
        def quit():
            Dlog.close()

        self.pushButton.clicked.connect(quit)
